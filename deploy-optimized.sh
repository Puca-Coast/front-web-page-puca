#!/bin/bash

# üöÄ Deploy Script - PUCA Optimized
echo "üöÄ Iniciando deploy otimizado do PUCA..."

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio root do frontend"
    exit 1
fi

# Fun√ß√£o para log colorido
log_info() {
    echo -e "‚ÑπÔ∏è  \033[0;34m$1\033[0m"
}

log_success() {
    echo -e "‚úÖ \033[0;32m$1\033[0m"
}

log_warning() {
    echo -e "‚ö†Ô∏è  \033[0;33m$1\033[0m"
}

log_error() {
    echo -e "‚ùå \033[0;31m$1\033[0m"
}

# Verificar depend√™ncias
log_info "Verificando depend√™ncias..."

if ! command -v npm &> /dev/null; then
    log_error "npm n√£o encontrado. Instale o Node.js primeiro."
    exit 1
fi

# Limpar cache e otimizar
log_info "Limpando cache do Next.js..."
rm -rf .next/cache
rm -rf .next/static

# Verificar se o arquivo de ambiente est√° presente
if [ ! -f ".env.local" ] && [ ! -f ".env" ]; then
    log_warning "Arquivo .env n√£o encontrado. Criando com valores padr√£o..."
    echo "NEXT_PUBLIC_API_BASE_URL=https://puca-api.vercel.app" > .env.local
fi

# Instalar depend√™ncias otimizadas
log_info "Instalando depend√™ncias..."
npm ci --prefer-offline --no-audit

# Executar build otimizado
log_info "Executando build de produ√ß√£o..."
npm run build

if [ $? -ne 0 ]; then
    log_error "Build falhou! Verifique os erros acima."
    exit 1
fi

log_success "Build conclu√≠do com sucesso!"

# Verificar se h√° problemas cr√≠ticos
log_info "Verificando problemas cr√≠ticos..."

# Verificar se os arquivos essenciais existem
ESSENTIAL_FILES=(
    ".next/static"
    ".next/server"
    "src/lib/cloudinary.ts"
    "src/components/ui/OptimizedImage/SimpleOptimizedImage.tsx"
    "netlify.toml"
    "next.config.mjs"
)

for file in "${ESSENTIAL_FILES[@]}"; do
    if [ ! -e "$file" ]; then
        log_error "Arquivo essencial n√£o encontrado: $file"
        exit 1
    fi
done

log_success "Todos os arquivos essenciais est√£o presentes!"

# Resumo das corre√ß√µes implementadas
echo ""
echo "üìä RESUMO DAS CORRE√á√ïES IMPLEMENTADAS:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "‚úÖ Loader personalizado para Cloudinary configurado"
echo "‚úÖ Componente SimpleOptimizedImage com fallbacks"
echo "‚úÖ Configura√ß√£o unoptimized para imagens externas"
echo "‚úÖ Headers otimizados no netlify.toml"
echo "‚úÖ Cache strategies implementadas"
echo "‚úÖ API simplificada e robusta (puca-api)"
echo "‚úÖ Build limpo sem erros cr√≠ticos"
echo ""

# Instru√ß√µes de deploy
echo "üéØ PR√ìXIMOS PASSOS PARA DEPLOY:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "1. Fazer commit das mudan√ßas:"
echo "   git add ."
echo "   git commit -m \"fix: resolve Cloudinary image optimization issues\""
echo ""
echo "2. Fazer push para o reposit√≥rio:"
echo "   git push origin main"
echo ""
echo "3. O Netlify detectar√° automaticamente e far√° o deploy"
echo ""
echo "üîç TESTES AP√ìS DEPLOY:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "‚Ä¢ Verificar se https://pucacoast.netlify.app/lookbook carrega sem erros 500"
echo "‚Ä¢ Testar carregamento de imagens do Cloudinary"
echo "‚Ä¢ Confirmar fallbacks funcionando para imagens quebradas"
echo "‚Ä¢ Validar performance no PageSpeed Insights"
echo ""

# Verificar se o git est√° configurado
if command -v git &> /dev/null; then
    if [ -d ".git" ]; then
        log_info "Preparando commit das mudan√ßas..."
        echo ""
        echo "Status atual do git:"
        git status --short
        echo ""
        log_success "Deploy script conclu√≠do! Execute os comandos acima para fazer o deploy."
    else
        log_warning "Reposit√≥rio git n√£o encontrado. Inicialize o git primeiro."
    fi
else
    log_warning "Git n√£o encontrado. Instale o git para versionamento."
fi

echo ""
log_success "üéâ Deploy script executado com sucesso!"
log_info "Acesse: https://pucacoast.netlify.app ap√≥s o deploy para testar as corre√ß√µes" 